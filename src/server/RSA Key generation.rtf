{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww13180\viewh17460\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Andrew Clark\
5/5/22\
Software Engineering Project\
Thumper\
\
	This document explains how to generate an RSA public/private key pair using the command line OpenSSL library. The Lemuria server at VTC has the OpenSSL command line tools already installed. This explanation assumes you will SSH into Lemuria for key generation. If you have the OpenSSL command line tools installed locally, ignore steps 1 and 3.\
\
1) Access Lemuria\
	To access Lemuria, you will first need an account on the server. If you do not already have an account, contact a professor who can create one for you. \
\
Once your account has been created, the OpenSSH client command to access the server is: \
ssh -p 2221 
\f1\i yourUserName
\f0\i0 @lemuria.cis.vtc.edu\
\
You will be prompted for the password to your account and be granted access after. \
\
\
2) Generate keys\
	Once you are in Lemuria or are on a machine with the OpenSSL command line tools installed, you can begin the key generation process. \
\
The command for generating the private key is: \
oopenssl genrsa -aes256 -passout pass:
\f1\i createAPassword
\f0\i0  -out server.pass.key 2048\
\
Documentation on the openssl genrsa command can be found here (https://www.openssl.org/docs/man1.1.1/man1/openssl-genrsa.html)\
\
The command to write the RSA key from server.pass.key to server.key is:\
openssl rsa -passin pass:
\f1\i thePasswordYouCreated
\f0\i0  -in server.pass.key -out server.key\
\
Documentation on the openssl rsa command can be found here (https://www.openssl.org/docs/man1.1.1/man1/openssl-rsa.html)\
\
You can now remove the server.pass.key leaving just the server.key:\
rm server.pass.key\
\
You now need to create a certificate signing request (CSR). The command for generating the CSR file from the private key is:\
openssl req -new -key server.key -out server.csr\
\
You will be prompted with a series of questions to indicate your identity. Documentation on the openssl req command can be found here (https://www.openssl.org/docs/man1.0.2/man1/openssl-req.html)\
\
Now that a .csr file exists. It needs to be signed to create a certificate containing the public key (.crt). The command for self-signing the server.csr using your own server.key private key is:\
openssl x509 -req -sha256 -days 730 -in server.csr -signkey server.key -out server.crt\
\
This will create a self-signed certificate containing your public key that has an expiration date in 730 days (2 years). Documentation for the openssl x509 command can be found here (https://www.openssl.org/docs/man1.1.1/man1/x509.html)\
\
The certificate signing request (server.csr) file is no longer needed and can be removed\
\
\
3) scp \
	If you now need to move these keys locally to either integrate them with your project or commit them to a repository, you should use the scp (secure copy command). Exit lemuria so you are back to your local computer command line and cd to the directory where you would like they keys to reside. \
\
This particular command will copy all files starting with \'91server\'92 in your lemuria root directory to whatever directory you are currently in, make sure to include the single quotations in the indicated loactions:\
scp -P 2221 \'91
\f1\i yourUserName
\f0\i0 @lemuria.cis.vtc.edu:server.*\'92 .\
\
Alternatively you can run the scripts \

\f1\i yourUserName
\f0\i0 @lemuria.cis.vtc.edu:server.key server.key \
and \

\f1\i yourUserName
\f0\i0 @lemuria.cis.vtc.edu:server.crt server.crt \
to copy only the desired files\
\
You now have an RSA 256 public/private key pair\
\
\
}