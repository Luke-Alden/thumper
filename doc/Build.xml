<?xml version="1.0"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.docbook.org/xml/4.5/docbookx.dtd">
  
<chapter id="Build">
  <title>Building and Testing Thumper</title>

  <para>This chapter describes how to build Thumper and its associated documentation. We also
    outline how to test Thumper. The tools with specific version numbers shown below are the
    official tools used by the Thumper contributors. Other tools (or other versions of the same
    tools) may also work.</para>

  <para>Thumper is written in a combination of Ada 2012 and SPARK 2014. It also makes use of
    some supporting libraries in C. Both a client and a server are provided. Thumper was
    developed on and supports the Windows platform. No official support for other platforms is
    provided but the main project file intends to be cross-platform to Linux and macOS.</para>

  <para>Thumper makes use of an ASN.1 library written in SPARK called Hermes. This library is
    part of the Thumper repository in the <filename>src/hermes</filename> folder. Hermes could
    potentially be broken out as a separate project in the future.</para>

  <variablelist>
    <title>Build Tools</title>

    <varlistentry>
      <term>GNAT</term>
      <listitem>
        <para>We use the GNAT Community 2021 from AdaCore as our Ada compiler. It can be used
          freely for open source projects such as Thumper. Thumper makes use of some
          GNAT-specific libraries for networking that are bundled with GNAT but that might not
          be available with another Ada compiler. These libraries are contained in package
            <package>GNAT</package> and its child packages.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>SPARK</term>
      <listitem>
        <para>We use the SPARK Community 2021 tools to verify Thumper. These tools are bundled
          with GNAT Community 2021 and don't require a separate installation.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>GNATstudio</term>
      <listitem>
        <para>We use the GNATstudio integrated development environment that comes with GNAT
          Community 2021 as our IDE. GNATstudio is able to integrate both Ada development and
          SPARK analysis. Some of us have used Visual Studio Code with AdaCore's extension for
          Ada programming installed. This is a viable alternative to GNATstudio.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>GtkAda</term>
      <listitem>
        <para>We use GtkAda Community 2021 to provide a graphical user interface for the client
          program. GtkAda is not available for macOS. Users of the Mac platform will need to
          create a dummy gtkada.gpr project file so the main project file will load. Mac users
          will not able to compile the Thumper client.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>AUnit</term>
      <listitem>
        <para>The Thumper test program makes use of the AUnit unit testing framework. AUnit is
          maintained by AdaCore and is part of the GNAT Community 2021 distribution. You do not
          need to install it separately.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>PostgreSQL</term>
      <listitem>
        <para>We use version 14 of the PostgreSQL database server to store information about
          generated time stamps (for example, for auditing purposes). If you install a different
          version, or install the server to a non-standard location, you will need to modify the
            <filename>thumper.gpr</filename> project file to reflect this. You should also
          ensure that PostgreSQL's <filename>bin</filename> folder is in your system PATH
          environment. Note that it is necessary to install (or build if you must) the 64 bit
          version of PostgreSQL's <filename>libpq.dll</filename> and corresponding import
          library. This makes it compatible with the 64 bit code generated by GNAT Community
          2021.</para>

        <para>We also make using of the OpenSSL libraries that are bundled with PostgreSQL. We
          use OpenSSL for the cryptographic primitives. Since OpenSSL is written in C, and thus
          not verified with the SPARK tools, we may switch to a SPARK cryptographic library in
          the future.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Python RFC-3161</term>
      <listitem>
        <para>
          <emphasis>Python RFC-3161 assumes the communication with the server takes place over
            an HTTP connection. Thus it is not suitable for testing a UDP based server such as
            is found in the current implementation of Thumper. A future version of Thumper may
            support other transport modes, however. Until that time comes it is not necessary or
            useful to install Python RFC-3161.</emphasis>
        </para>

        <para>To exercise the server without a specific client one could make use of the Python
          RFC-3161 implementation <ulink url="https://pypi.python.org/pypi/rfc3161"
          >here</ulink>. We recommend that this package be downloaded and unpacked into a folder
          such as <filename>rfc3161-x.y.z</filename> off the root of your working copy. Various
          scripts and paths assume this location for a suitable version x.y.z (currently 0.1.6
          at the time of this writing). The Python RFC-3161 package requires the pyasn1 package
          as a prerequisite. Specific instructions for setting this up on Windows are as
          follows. Similar steps may be required on Linux and other systems but the details will
          need adjusting.</para>
        <itemizedlist>
          <listitem>
            <para>Download and install the latest Python 2.x version from the <ulink
                url="http://www.python.org">Python home page</ulink>.</para>
          </listitem>
          <listitem>
            <para>Download and install the setuptools package from <ulink
                url="https://pypi.python.org/pypi/setuptools">here</ulink>. For Windows this
              entails downloading the <filename>ez_setup.py</filename> script and executing it.
              Be sure to use an Administrator enabled command prompt to do this. When the script
              completes you should have the program <filename>easy_install.exe</filename> in the
                <filename>Scripts</filename> folder of your Python installation.</para>
          </listitem>
          <listitem>
            <para>Using an Administrator enabled command prompt, go into your
                <filename>Scripts</filename> folder and run <command>easy_install
                pyasn1</command>. This installs the pyasn1 package into your Python
              installation. See the <ulink url="https://pypi.python.org/pypi/pyasn1/">pyasn1
                page</ulink> for more information.</para>
          </listitem>
          <listitem>
            <para>Using a normal command prompt run the command <command>python</command> to
              start a Python interpreter (you may have to add your Python installation folder to
              the PATH first). Type <command>import pyasn1</command> to verify that the package
              is accessible.</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>DocBook</term>
      <listitem>
        <para>The documentation is written in DocBook. It is an XML format and so is readable in
          an ordinary text editor. However, if you want to build nicely formatted documentation
          you will need a tool chain for processing DocBook documents. Several such tool chains
          exist. This document does not discuss the options any further.</para>
      </listitem>
    </varlistentry>

  </variablelist>

  <para>To build Thumper install the components listed above and then load the project file
      <filename>src/thumper.gpr</filename> into GNATstudio. You will find the main files
      <filename>thumper_server.adb</filename> and <filename>thumper_client.adb</filename>. Build
    these files to generate the server and client programs respectively.</para>

  <para>Before the server can be run, you will need to set up a thumper role in the PostgreSQL
    database server, and initialize a ThumperServer database. Use the following commands (the $
    character indicates a console prompt):</para>

  <literallayout>
    $ psql -U postgres
    postgres=> CREATE ROLE thumper WITH LOGIN CREATEDB PASSWORD 'supersecret';
    postgres=> \q
    $ createdb -U thumper ThumperServer
  </literallayout>

  <para>To test Thumper, build the main files hermes_test.adb and thumper_test.adb. Executing
    the resulting programs will run all the unit tests and produce reports of the results on the
    console.</para>

</chapter>
